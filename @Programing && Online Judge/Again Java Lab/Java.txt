"cpp": "clear && cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt", //"cls && $Host.ui.rawui.foregroundcolor = \"cyan\" &&


----Set B 5 No ---------

public class FileInput {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(new File("Name.txt"));
        int count = 0;
        String wordCount;
        while(in.hasNext()){
            wordCount = in.next();
            count++;
        }
        System.out.println(count);
    }
}

-------ComboLock-----------
package ctQues;

class ComboLock {
    int secret1 , secret2, secret3;
    int[] userSecret = new int[3];
    int passnumber = 0;
    int dial = 0;
    int lasttime = -1;
    public ComboLock(int secret1, int secret2, int secret3){
        this.secret1 = secret1;
        this.secret2 = secret2;
        this.secret3 = secret3;
    }
    public void reset(){
        dial = 0;
        passnumber = 0;
    }
    public void turnLeft(int ticks){
        if(lasttime == 0){
            userSecret[passnumber] = dial;
            passnumber++;
        }
        dial += ticks;
        dial %= 40;
        lasttime = 1;
    }
    public void turnRight(int ticks){
        if(lasttime == 1){
            userSecret[passnumber] = dial;
            passnumber++;
        }
        dial -= ticks;
        while(dial < 0) dial += 40;
        lasttime = 0;
    }
    public boolean open(){
        userSecret[passnumber] = dial;
        if(secret1 == userSecret[0] && secret2 == userSecret[1] && secret3 == userSecret[2]){
            return true;
        }else{
            return false;
        }
    }
}

public class Ques3 {
    public static void main(String[] args) {
        ComboLock ashiq = new ComboLock(5,10,15);
        ashiq.turnLeft(5);
        ashiq.turnRight(35);
        ashiq.turnLeft(5);
        if(ashiq.open()){
            System.out.println("Unlocked");
        }else{
            System.out.println("Wrong Password");
        }
    }
}

----------Set A 01 -----------
package Shift1Ques;
class Table{
    private int[][] values;
    public Table(int rows, int columns){
        values = new int[rows][columns];
    }
    public void set(int i,int j, int n){
        values[i][j] = n;
    }
    public boolean valid(int i, int j){
        //this will return true if cell i,j is valid
        //for example -1, 2 is invalid
        //1,2 is valid when n= 3, m =4;
        //when n = 2, m =3 (that means the table is 2*3) i = 5,j= 1 is invalid
        int n = values.length;
        int m = values[0].length;
        if(i >= 0 && i < n && j >= 0 && j < m) return true;
        return false;
    }
    public double nighborAverage(int i,int j){
        double sum = 0.0;
        int n = values.length;
        int m = values[0].length;
        int cnt = 0;
        if(valid(i-1,j-1)){
            sum += values[i-1][j-1];
            cnt++;
        }
        if(valid(i-1,j+1)){
            sum += values[i-1][j+1];
            cnt++;
        }if(valid(i-1,j)){
            sum += values[i-1][j];
            cnt++;
        }if(valid(i,j-1)){
            sum += values[i][j-1];
            cnt++;
        }if(valid(i,j+1)){
            sum += values[i][j+1];
            cnt++;
        }if(valid(i+1,j-1)){
            sum += values[i+1][j-1];
            cnt++;
        }if(valid(i+1,j)){
            sum += values[i+1][j];
            cnt++;
        }if(valid(i+1,j+1)) {
            sum += values[i + 1][j + 1];
            cnt++;
        }
        return sum/cnt;
    }
}

public class Ques1 {
    public static void main(String[] args) {

    }
}
----------Set A 03 -----------
package Shift1Ques;

interface NumberFormatter{
    String format(int n);
}
class DefaultFormatter implements NumberFormatter{
    @Override
    public String format(int n) {
        return Integer.toString(n);
    }
}
class DecimalSeparatorFormatter implements NumberFormatter{
    @Override
    public String format(int n) {
        String str = Integer.toString(n);
        StringBuilder nw = new StringBuilder();
        int idx = 0;
        for(int i = str.length()-1; i >= 0; i--){
            if(idx != 0 && idx%3 == 0 && str.charAt(i) != '-'){
                nw.append(",");
            }
            nw.append(str.charAt(i));
            idx++;
        }
        nw.reverse();
        return nw.toString();
    }

}
class AccountingFormatter implements NumberFormatter{
    @Override
    public String format(int n) {
        String str = Integer.toString(n);
        if(str.charAt(0) == '-'){
            str = str.substring(1,str.length());
            str = "(" + str + ")";
        }
        return str;
    }
}
class BaseFormatter implements NumberFormatter{
    int n; //this is base
    BaseFormatter(int n){
        this.n = n;
    }
    @Override
    public String format(int n) {
        int gun = 1;
        if(n < 0){
            n = -n;
            gun = -1;
        }
        StringBuilder str = new StringBuilder();
        while(n > 0){
            str.append(Integer.toString(n%this.n));
            n /= this.n;
        }
        if(gun == -1) str.append("-");
        str.reverse();
        return str.toString();
    }
}

public class Ques3{
    public static void main(String[] args) {
        int n = -1000000;
        DefaultFormatter as = new DefaultFormatter();
        DecimalSeparatorFormatter h = new DecimalSeparatorFormatter();
        AccountingFormatter i = new AccountingFormatter();
        BaseFormatter q = new BaseFormatter(2);

        System.out.println(as.format(n));
        System.out.println(h.format(n));
        System.out.println(i.format(n));
        System.out.println(q.format(n));
    }
}
-----------------A 4-----------
package Shift1Ques;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;

public class Ques4 {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner sc = new Scanner(new File("hello.txt"));
        //first read all lines in the file
        ArrayList<String>list = new ArrayList<String>();
        while (sc.hasNextLine()){
            String now = sc.nextLine();
            list.add(now);
        }
        sc.close();
        //now print the lines
        PrintWriter pr = new PrintWriter(new File("hello.txt"));
        for(int i = 0; i < list.size() ; i++){
            pr.println("/*" + i + "*/" + list.get(i));
        }
        pr.close();
    }
}
-----------A5---------
package Shift1Ques;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

class SearchWord implements Runnable{
    String srcWord, filename;
    SearchWord(String one, String two){
        srcWord = one;
        filename = two;
    }
    @Override
    public void run() {
        try {
            Scanner sc = new Scanner(new File(filename));
            while(sc.hasNextLine()){
                String now = sc.nextLine();
                if(now.contains(srcWord)){
                    System.out.println(filename + ": " + now);
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

    }
}

public class Ques5{
    public static void main(String[] args) {
        String srcWord = args[0];
        for(int i =1; i < args.length;i++){
            SearchWord sr = new SearchWord(srcWord, args[i]);
            Thread t1 = new Thread(sr);
            t1.start();
        }
    }
}
---------------------------------
